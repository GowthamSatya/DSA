1) Maximum number of nodes at a level 'l'  of a binary tree is 2^l

2) Maximum number of nodes in a binary tree of height h is 2^h-1

3) Minimum possible height for a binary tree with N nodes is 
   log(N+1)base2

4) A binary tree with l leaves has atleast mod(log l base 2)+1 
   levels

5) In Binary tree where every node has 0 or 2 children, 
   the number of leaf nodes is always one more than nodes 
   with two children.

6) In a non empty binary tree, if n is the total number of 
   nodes and e is the total number of edges, then e = n-1 


HANDSHAKING LEMMA :
In every finite undirected graph, an even number of vertices 
will always have an odd degree.

1) In a k-ary tree where every node has either 0 or k children, 
   the following property is always true. 

   L = (k - 1)*I + 1
      L = Number of leaf nodes
      I = Number of internal nodes 

2) In a Binary tree, the number of leaf nodes is always one 
   more than nodes with two children. 

      L = T + 1
        Where L = Number of leaf nodes
              T = Number of internal nodes with two children 
        
=> Number of Possible unlabelled trees with n nodes = nth Catalan Number
                            =  2*n C n

=> Number of possible labelled binary trees with n nodes = 
    (Number of unlabelled trees) * n!
    

